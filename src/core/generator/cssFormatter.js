/**
 * CSS output formatting logic
 * Handles minification and pretty-printing of final CSS
 */

/**
 * Format final CSS output
 * @param {Array} rules - Array of CSS rules
 * @param {Object} options - Formatting options
 * @returns {string} Final CSS string
 */
export function formatCSS(rules, options = {}) {
  const { minify = false, includeComments = false } = options;

  let css = "";

  if (includeComments && !minify) {
    css += "/* Generated by ZyraCSS */\n\n";
  }

  for (const rule of rules) {
    const selectors = rule.selectors.join(minify ? "," : ",\n");
    const declarations = Object.entries(rule.declarations)
      .map(([prop, val]) => `${minify ? "" : "  "}${prop}: ${val};`)
      .join(minify ? "" : "\n");

    if (minify) {
      css += `${selectors}{${declarations}}`;
    } else {
      css += `${selectors} {\n${declarations}\n}\n\n`;
    }
  }

  return css.trim();
}
